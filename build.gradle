plugins {
	id 'fabric-loom' version '1.4-SNAPSHOT'
	id 'maven-publish'
	id 'com.matthewprenger.cursegradle' version '1.4.0' apply false
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}


configurations.all {
	resolutionStrategy {
		force("net.fabricmc:fabric-loader:$loader_version")
	}
}

repositories {
	maven {
		url "https://cursemaven.com"
		content {
			includeGroup "curse.maven"
		}
	}
	maven { url "https://maven.shedaniel.me/" }
	maven { url "https://maven.terraformersmc.com/" }
}




dependencies {
	modApi("me.shedaniel.cloth:cloth-config-fabric:${cloth_config_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}
	// To change the versions, see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	implementation 'com.github.imifou:jsonschema-module-addon:1.2.1'


	modImplementation "me.shedaniel.cloth.api:cloth-utils-v1:${cloth_api_version}"
	include "me.shedaniel.cloth.api:cloth-utils-v1:${cloth_api_version}"
	include "me.shedaniel.cloth:cloth-config-fabric:${cloth_config_version}"

	modImplementation "com.terraformersmc:modmenu:${modmenu_version}"


	implementation 'com.electronwill.night-config:toml:3.6.3'

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	// CC Restitched
	modImplementation("curse.maven:cc-restitched-462672:3838648")


	modImplementation "me.shedaniel.cloth.api:cloth-utils-v1:${cloth_api_version}"
	include "me.shedaniel.cloth.api:cloth-utils-v1:${cloth_api_version}"
	include "me.shedaniel.cloth:cloth-config-fabric:${cloth_config_version}"


}



processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17

}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}